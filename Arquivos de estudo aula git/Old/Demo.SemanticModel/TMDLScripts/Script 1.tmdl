createOrReplace

	model Model
		culture: en-US
		defaultPowerBIDataSourceVersion: powerBI_V3
		sourceQueryCulture: pt-BR
		dataAccessOptions
			legacyRedirects
			returnErrorValuesAsNull

		table moedas
			lineageTag: a92b963b-f72f-4fe4-83f4-a1ea2df69272

			column Moeda
				dataType: string
				lineageTag: 3a6fb5f9-0414-4b19-9c4f-fcbdb704a1c9
				summarizeBy: none
				sourceColumn: Moeda

				annotation SummarizationSetBy = Automatic

			column Nome
				dataType: string
				lineageTag: 69097452-1b72-4633-a6a4-2662e6a23f74
				summarizeBy: none
				sourceColumn: Nome

				annotation SummarizationSetBy = Automatic

			column Formato
				dataType: string
				lineageTag: 723b5a7e-a139-41e5-9662-b057e2561a43
				summarizeBy: none
				sourceColumn: Formato

				annotation SummarizationSetBy = Automatic

			partition moedas = m
				mode: import
				queryGroup: Dimensões
				source = ```
						let
						    source = Table.FromRows(
						        {
						            {"BRL", "Real brasileiro", "R$ #,##0.00;R$ #,##0.00;-"},
						            {"AUD", "Dólar australiano", "$ #,##0.00;$ #,##0.00;-"},
						            {"CAD", "Dólar canadense", "$ #,##0.00;$ #,##0.00;-"},
						            {"CHF", "Franco suíço", "Fr #,##0.00;Fr #,##0.00;-"},
						            {"DKK", "Coroa dinamarquesa", "kr #,##0.00;kr #,##0.00;-"},
						            {"EUR", "Euro", "€ #,##0.00;€ #,##0.00;-"},
						            {"GBP", "Libra Esterlina", "£ #,##0.00;£ #,##0.00;-"},
						            {"JPY", "Iene", "¥ #,##0;¥ #,##0;-"},
						            {"NOK", "Coroa norueguesa", "kr #,##0.00;kr #,##0.00;-"},
						            {"SEK", "Coroa sueca", "kr #,##0.00;kr #,##0.00;-"},
						            {"USD", "Dólar dos Estados Unidos", "$ #,##0.00;$ #,##0.00;-"}
						        },
						        {"Moeda", "Nome", "Formato"}
						    ),
						    
						    changedType = Table.TransformColumnTypes(
						        source,{
						            {"Moeda", type text}, 
						            {"Nome", type text}, 
						            {"Formato", type text}
						        }
						    )
						
						in
						    changedType
						```

			annotation PBI_NavigationStepName = Navigation

			annotation PBI_ResultType = Table

		table calendario
			lineageTag: 602c10b1-0eb9-4b08-b2d9-131e80609c58
			dataCategory: Time

			column Data
				dataType: dateTime
				isKey
				formatString: Short Date
				lineageTag: 6d8f6971-7603-482b-8a11-6bf17358c587
				summarizeBy: none
				sourceColumn: Data

				annotation SummarizationSetBy = Automatic

				annotation UnderlyingDateTimeDataType = Date

			column Ano
				dataType: int64
				formatString: 0
				lineageTag: fa1757a5-9dac-4982-8a28-539c52022e7c
				summarizeBy: sum
				sourceColumn: Ano

				annotation SummarizationSetBy = Automatic

			column MesAno
				dataType: string
				lineageTag: d698a7a7-f12a-4a9b-92aa-3708cd81ea7c
				summarizeBy: none
				sourceColumn: MesAno
				sortByColumn: MesAnoNum

				changedProperty = SortByColumn

				annotation SummarizationSetBy = Automatic

			column MesInicio
				dataType: dateTime
				formatString: Long Date
				lineageTag: 7ad47eac-1b65-4de2-a040-e67a24ede3bf
				summarizeBy: none
				sourceColumn: MesInicio

				annotation SummarizationSetBy = Automatic

				annotation UnderlyingDateTimeDataType = Date

			column MesAnoNum = FORMAT(calendario[Data],"yyyymm")
				lineageTag: 81576bd6-d4c9-4a6a-827a-ccd498387a22
				summarizeBy: none

				annotation SummarizationSetBy = Automatic

			partition calendario = m
				mode: import
				queryGroup: Dimensões
				source = ```
						let
						    dataInicial = data_inicial, 
						    dataFinal = data_final, 
						    
						    datas = List.Dates(
						        dataInicial, 
						        Duration.Days(dataFinal-dataInicial) + 1, 
						        #duration(1, 0, 0, 0)
						    ),
						
						    calendario = #table(
						        type table[
						            Data = date,
						            Ano = Int64.Type,
						            MesAno = text,
						            MesInicio = date
						        ],
						        List.Transform(
						            datas,
						            each {
						                _,
						                Date.Year(_),
						                Date.ToText(_, [Format="MMM/yy", Culture="pt-BR"]),
						                Date.StartOfMonth(_)
						            }
						        )
						    )
						
						in
						    calendario
						```

			annotation PBI_NavigationStepName = Navigation

			annotation PBI_ResultType = Table

		table transacoes
			lineageTag: a2ea0539-01d0-4db8-80c6-e636bd9e661b

			measure Measure = 1
				formatString: 0
				lineageTag: 426ca903-554a-47b0-bba1-58442b981d16

			column ID
				dataType: double
				lineageTag: 083579d1-7f18-4161-9ab4-29779f8bbfb9
				summarizeBy: count
				sourceColumn: ID

				annotation SummarizationSetBy = Automatic

				annotation PBI_FormatHint = {"isGeneralNumber":true}

			column Data
				dataType: dateTime
				formatString: Short Date
				lineageTag: a57c9e4e-fca8-4557-af0c-bb8d2912323e
				summarizeBy: none
				sourceColumn: Data

				annotation SummarizationSetBy = Automatic

				annotation UnderlyingDateTimeDataType = Date

			column Total
				dataType: double
				lineageTag: 6fbaa04a-9c03-46e6-a826-86e9e1f283fc
				summarizeBy: sum
				sourceColumn: Total

				annotation SummarizationSetBy = Automatic

				annotation PBI_FormatHint = {"isGeneralNumber":true}

			column Moeda
				dataType: string
				lineageTag: a6446b01-61d4-4047-bf46-0c4aa455db1a
				summarizeBy: none
				sourceColumn: Moeda

				annotation SummarizationSetBy = Automatic

			partition transacoes = m
				mode: import
				queryGroup: Fatos
				source = ```
						let
						    source = Excel.Workbook(
						        File.Contents(base_transacoes), 
						        true, 
						        null
						    ),
						    
						    transacoes_Table = source{[Item="transacoes",Kind="Table"]}[Data],
						    
						    datesRestricted = Table.SelectRows(
						        transacoes_Table, 
						        each [Data] >= data_inicial and [Data] <= data_final
						    )
						in
						    datesRestricted
						```

			annotation PBI_NavigationStepName = Navigation

			annotation PBI_ResultType = Table

		table Cotacoes
			lineageTag: e64d34fb-c053-4d31-bfc8-3085ee9323c7

			column Moeda
				dataType: string
				lineageTag: 8e33d0eb-0b16-49de-afba-cfba65e2ef4c
				summarizeBy: none
				sourceColumn: Moeda

				annotation SummarizationSetBy = Automatic

			column DataHora
				dataType: dateTime
				formatString: General Date
				lineageTag: 1cb9a1cc-db5d-42fd-a1f6-c082183f413d
				summarizeBy: none
				sourceColumn: DataHora

				annotation SummarizationSetBy = Automatic

			column Cotacao
				dataType: double
				lineageTag: d8141ea9-3873-49cc-8d3c-4d9603b2d598
				summarizeBy: average
				sourceColumn: Cotacao

				annotation SummarizationSetBy = User

				annotation PBI_FormatHint = {"isGeneralNumber":true}

			column TipoBoletim
				dataType: string
				lineageTag: e9a0beff-6074-490b-8bf1-4807386a4f71
				summarizeBy: none
				sourceColumn: TipoBoletim

				annotation SummarizationSetBy = Automatic

			column Data
				dataType: dateTime
				formatString: Short Date
				lineageTag: 5ebbc797-1193-4337-9678-7104a61af209
				summarizeBy: none
				sourceColumn: Data

				annotation SummarizationSetBy = Automatic

				annotation UnderlyingDateTimeDataType = Date

			partition Cotacoes = m
				mode: import
				queryGroup: Fatos
				source =
						let
						    Source = getcotacoes(data_inicial, data_final)
						in
						    Source

			annotation PBI_NavigationStepName = Navigation

			annotation PBI_ResultType = Table

		relationship AutoDetected_99a635e7-dde1-47a8-9393-516c16132e89
			fromColumn: transacoes.Moeda
			toColumn: moedas.Moeda

		relationship AutoDetected_c77e0845-a88a-4e7c-9669-da6ce7b1a75f
			fromColumn: Cotacoes.Moeda
			toColumn: moedas.Moeda

		relationship e809ac6a-7d79-acdf-13ed-c2ef7574782e
			fromColumn: Cotacoes.Data
			toColumn: calendario.Data

		relationship 77404c22-c0bc-6181-a66d-35a918c7a8c9
			fromColumn: transacoes.Data
			toColumn: calendario.Data

		cultureInfo en-US

			linguisticMetadata = {"Version":"1.0.0","Language":"en-US"}
				contentType: json

		expression data_inicial = #date(2024, 1, 1) meta [IsParameterQuery=true, Type="Date", IsParameterQueryRequired=true]
			lineageTag: 4d2bed63-fad4-4c4c-be67-2eb893ed539e
			queryGroup: Parâmetros

			annotation PBI_NavigationStepName = Navigation

			annotation PBI_ResultType = Date

		expression base_transacoes = "C:\Users\renat\Downloads\Material Referência_Estudo\Estudo PBIP\transacoes.xlsx" meta [IsParameterQuery=true, Type="Text", IsParameterQueryRequired=true]
			lineageTag: 10cad112-001c-44bb-9c20-485e05ab0fcf
			queryGroup: Parâmetros

			annotation PBI_NavigationStepName = Navigation

			annotation PBI_ResultType = Text

		expression data_final =
				let
				    Source = DateTime.Date(DateTime.LocalNow())
				in
				    Source
			lineageTag: 9a46835b-0754-4fdf-925e-c42b24b42509
			queryGroup: Parâmetros

			annotation PBI_NavigationStepName = Navigation

			annotation PBI_ResultType = Date

		expression getcotacoes = ```
				let
				    getCotacoes = (dataInicial as date, dataFinal as date, moeda as text, pagina as number) as table =>
				    let
				        url = "https://olinda.bcb.gov.br/olinda/servico/PTAX/versao/v1/odata",
				        endpoint = "CotacaoMoedaPeriodo(moeda=@moeda,dataInicial=@dataInicial,dataFinalCotacao=@dataFinalCotacao)",
				        query = [
				            #"@moeda" = "'" & moeda & "'",
				            #"@dataInicial" = "'" &  Date.ToText(dataInicial,"MM-dd-yyyy") & "'",
				            #"@dataFinalCotacao" = "'" & Date.ToText(dataFinal,"MM-dd-yyyy") & "'",
				            #"$top" = Number.ToText(100),
				            #"$skip" = Number.ToText((pagina-1)*100),
				            #"$format"= "json"
				        ],
				        request = Web.Contents(
				            url,
				            [ RelativePath = endpoint, Query = query ]
				        ),
				        response = Json.Document(request, 65001), 
				        lista = response[value] 
				    in
				        Table.FromRecords(lista), 
				
				    getCotacoesPaginacao = (dataInicial as date, dataFinal as date, moeda as text) as table =>
				    let
				        todasPaginas = List.Generate(
				            ( ) => [ pagina = 1, cotacao = try getCotacoes(dataInicial, dataFinal, moeda, pagina) otherwise null ],
				                each [cotacao] <> null and Table.RowCount([cotacao]) > 0,
				                each [ pagina = [pagina] + 1, cotacao = try getCotacoes( dataInicial, dataFinal, moeda, pagina ) otherwise null],
				                each [cotacao]
				        ) 
				    in
				        Table.AddColumn(Table.Combine(todasPaginas), "Moeda", each moeda, type text),
				
				    processaCotacoes = (dataInicial as date, dataFinal as date) as table =>
				    let
				        moedas = List.Select(moedas[Moeda], each _ <> "BRL"),
				
				        todasCotacoes = List.Accumulate(
				            moedas,
				            #table({},{}),
				            (s, c) => 
				            Table.Combine({s, getCotacoesPaginacao(dataInicial, dataFinal, c)})
				
				        ),
				
				        colunasSelecionadas = Table.SelectColumns(
				            todasCotacoes,
				            { "Moeda", "dataHoraCotacao", "cotacaoCompra", "tipoBoletim" }
				        ),
				
				        colunasRenomeadas = Table.RenameColumns(
				            colunasSelecionadas,
				            {
				                {"dataHoraCotacao", "DataHora"},
				                {"cotacaoCompra", "Cotacao"},
				                {"tipoBoletim", "TipoBoletim"}
				            }
				        ),
				
				        tipoAlterado = Table.TransformColumnTypes(
				            colunasRenomeadas,
				            {
				                {"DataHora", DateTime.Type},
				                {"Cotacao", Number.Type}, 
				                {"TipoBoletim", Text.Type}
				            }
				        ),
				
				        dataAdicionada = Table.AddColumn(
				            tipoAlterado,
				            "Data", 
				            each DateTime.Date([DataHora]),
				            type date
				        )
				
				    in
				        dataAdicionada   
				
				in
				    processaCotacoes
				```
			lineageTag: 050cc905-4ade-4494-9e9f-5f5bc9d917bb
			queryGroup: Funções

			annotation PBI_NavigationStepName = Navigation

			annotation PBI_ResultType = Function

		queryGroup Parâmetros

			annotation PBI_QueryGroupOrder = 0

		queryGroup Dimensões

			annotation PBI_QueryGroupOrder = 1

		queryGroup Fatos

			annotation PBI_QueryGroupOrder = 2

		queryGroup Funções

			annotation PBI_QueryGroupOrder = 3

		annotation __PBI_TimeIntelligenceEnabled = 0

		annotation PBIDesktopVersion = 2.142.1277.0 (25.04)+014fde450f93691fc9537f0758d73d1c5df153ef

		annotation PBI_QueryOrder = ["data_inicial","base_transacoes","data_final","moedas","calendario","transacoes","getcotacoes","Cotacoes"]

		annotation PBI_ProTooling = ["DevMode"]

